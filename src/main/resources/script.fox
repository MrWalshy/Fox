//defun(counter, () -> { 
//	var(count, 0)
//	defun(() -> { 
//		assign(count, count + 1)
//	})
//})

//var(simpleCounter, counter())
//simpleCounter() // 1
//simpleCounter() // 2

//defun(time, () -> clock())
//var(time, defun(() -> clock()))
//time()

//var(x, len("hello"))

//var(x, eval("5 + 5 * 3"))

defun(time, (f) -> {
  var(start, clock())
  f()
  var(end, clock())
  "Took " + (end - start) + " seconds to run."
})

defun(fibonacci, (n) -> {
  n <= 1 ? n : fibonacci(n - 2) + fibonacci(n - 1)
})

// approx 9.1 seconds on i7 10th gen, 5.11 seconds on i5 11th gen
// var(timeToRun, time('() -> print(fibonacci(35) + "\n")))

// print(timeToRun)

var(weather, "sunny")

match weather {
  "sunny" => print("Wear suncream\n")
  _       => print("Pack a brolly\n")
}

var(myArr, [1,2,3])
var(length, len(myArr))
print(length)
set(myArr, 0, 22)
var(myVariedArr, [1, "Hello", true, null])
print(myVariedArr[3])